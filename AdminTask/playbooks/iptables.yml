- name: Iptables Settings
  hosts: public_servers
  become: yes
  vars_files:
    - "../vars/iptables.yml"
  tasks:
    - name: Check if the host is the specific IP
      set_fact:
        is_specific_ip: "{{ inventory_hostname == '95.85.126.103' }}"
    
    - name: Save iptables rules to /etc/iptables/rules.v4
      ansible.builtin.shell: /usr/sbin/iptables-save
      register: iptables_rules     
      
    - name: Write iptables rules to file
      ansible.builtin.copy:
         content: "{{ iptables_rules.stdout }}"
         dest: /etc/iptables/rules.bak
         owner: root
         group: root
         mode: '0644'
      changed_when: iptables_rules.stdout != ''
      

    - block:
      - name: Copy rules.v4 file to destination
        copy:
          src: /home/cybercrow/Documents/Projects/ansible_scripts/AdminTask/files_folders/rules.v4
          dest: /etc/iptables/rules.v4
          owner: root
          group: root
          mode: '0644'
      - name: restore firewall state from a file
        community.general.iptables_state:
          state: restored
          path: /etc/iptables/rules.v4
        async: "{{ ansible_timeout }}"
        poll: 0
      tags: "rule_conf"

    - block:
      - name: Add iptables rule
        ansible.builtin.iptables:
          chain: INPUT
          protocol: tcp
          source:  "{{item.0}}"
          destination_port: "{{ item.1 }}"
          jump: ACCEPT
          action: insert
          rule_num: 1
        loop: "{{ allowed_ips | product(dst_port) | list }}"

      - name: Save iptables rules to /etc/iptables/rules.v4
        ansible.builtin.shell: /usr/sbin/iptables-save
        register: iptables_rules     
      
      - name: Write iptables rules to file
        ansible.builtin.copy:
          content: "{{ iptables_rules.stdout }}"
          dest: /etc/iptables/rules.v4
          owner: root
          group: root
          mode: '0644'
        changed_when: iptables_rules.stdout != ''
      when: is_specific_ip
      tags: "insertrule"


  